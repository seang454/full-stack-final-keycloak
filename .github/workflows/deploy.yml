name: Deploy Infra to VM

on:
  push:
    branches: ["master"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout workflow repo
        uses: actions/checkout@v3

      - name: SSH into VM and deploy infra
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.GCE_VM_IP }}
          username: ${{ secrets.GCE_VM_USER }}
          key: ${{ secrets.GCE_SSH_PRIVATE_KEY }}
          script: |
            set -e
            set -o pipefail

            echo "üöÄ Starting infra deployment (Postgres + Keycloak + MinIO)..."

            # Ensure project directory exists
            mkdir -p $HOME/docuhub-infra

            # Clone or update repo
            if [ -d "$HOME/docuhub-infra/.git" ]; then
              echo "üìÇ Repo exists, updating..."
              cd $HOME/docuhub-infra
              
              # Stop containers first to release directory locks
              echo "üõë Stopping existing containers..."
              docker compose down --remove-orphans || true
              
              # Fix permissions on keycloak directories before git pull
              echo "üîß Fixing permissions..."
              sudo chown -R $(whoami):$(whoami) keycloak/ 2>/dev/null || true
              
              # Now pull the latest changes
              git fetch origin
              git reset --hard origin/master
            else
              echo "üìÇ Cloning repo..."
              git clone https://${{ secrets.PAT_TOKEN }}@github.com/seang454/full-stack-final-keycloak.git $HOME/docuhub-infra
              cd $HOME/docuhub-infra
            fi


            # Find the docker-compose file
            DOCKER_COMPOSE_FILE=$(find $HOME/docuhub-infra -name "docker-compose.yml" | head -n 1)
            if [ -z "$DOCKER_COMPOSE_FILE" ]; then
              echo "‚ùå docker-compose.yml not found!"
              exit 1
            fi

            # Go to folder containing docker-compose.yml
            COMPOSE_DIR=$(dirname "$DOCKER_COMPOSE_FILE")
            cd "$COMPOSE_DIR"
            echo "üìÇ Current folder: $(pwd)"
            ls -l

            # Deploy infra with Docker Compose
            echo "üê≥ Deploying services..."
            docker compose pull
            docker compose up -d

            # Cleanup unused images
            docker system prune -af || true

            echo "‚úÖ Infra deployment finished successfully!"
            docker ps
